I want to build a full-featured SaaS web app using React + Firebase, hosted on Replit, for freelancers to manage invoices, quotes, statements, customers, and products.

General Requirements:
	•	Users can create and download branded PDFs for invoices, quotes, and statements
	•	Firebase Auth (email/password)
	•	Firestore to store users, documents, and soft-deleted data
	•	7-day free trial for new users
	•	After trial expires, users are locked out unless marked as a subscriber
	•	No Stripe integration yet — subscription is managed via isSubscriber flag in Firestore
	•	No browser popups like alert() or confirm() — all feedback must be shown in-page (banners, modals, inline errors)

User Roles:
	•	Trial User — 7 days of access from trialStartDate
	•	Subscriber — full access
	•	Admin — hidden admin panel and platform control

Each Firestore user document should include:
trialStartDate: timestamp
isSubscriber: boolean
isSuspended: boolean
isAdmin: boolean

Access Logic:
	•	If trialStartDate is older than 7 days and not a subscriber, redirect to /trial-expired
	•	If isSuspended is true, redirect to /suspended
	•	If isAdmin is true, show /admin in the sidebar nav

Pages:

Public:
	•	/ (Landing Page)
	•	Hero section with Login and Sign Up buttons
	•	App overview and features
	•	Pricing section: Free Trial (7 days) and Paid Plan Coming Soon

Protected (Trial or Subscriber Only):
	•	/dashboard – Welcome panel with quick links
	•	/invoices – Create, view, soft delete, PDF export
	•	/quotes – Same functionality as invoices
	•	/statements – Same as above
	•	/products – Manage products (name, unit price, tax)
	•	/customers – Manage customer profiles
	•	/settings – Enter company branding (logo, address, VAT, reg number)
	•	/account – Manage subscription status, change password, delete account
	•	/reports – Show user metrics: # of invoices, quotes, customers, monthly breakdowns
	•	/recycle-bin – Recycle bin for deleted invoices, quotes, customers (recover within 7 days)

Admin Panel (/admin):
	•	View/search all users
	•	Grant or revoke isSubscriber flag
	•	Suspend or unsuspend users
	•	View total user count, active trials, active subscribers, mock revenue
	•	Optional: toggle site maintenance mode or broadcast messages to all users

PDF Generation:
	•	Use html2pdf.js or jsPDF
	•	Match app theme (fonts, colors)
	•	Header: logo (left), document type (center), company info (right)
	•	Footer: VAT number and company number
	•	Pull data from user’s /settings entry
	•	PDFs must be downloadable and stored per user in Firestore

Recycle Bin Logic:
	•	When users delete invoices, quotes, or customers, move the item into a recycle_bin Firestore collection
	•	Each record must store:
originalId
type: invoice, quote, or customer
data: full document contents
deletedAt: timestamp
	•	On /recycle-bin page, display grouped deleted items with:
time left before permanent deletion (7-day countdown)
restore button
optional “delete forever” button
	•	Automatically purge records older than 7 days (client-side or background process)

Account Page (/account):
	•	Show subscription status (trial, active, expired)
	•	Change password (requires current and new password)
	•	Delete account:
	•	Requires password entered twice
	•	Must show in-page red warning banner:
“⚠️ This will permanently delete your account and all associated data. This action cannot be undone.”
	•	Re-authenticate user
	•	Delete user from Firebase Auth
	•	Delete all Firestore data
	•	Redirect to goodbye or landing page

Reports Page (/reports):
	•	Show personal usage statistics:
	•	Number of invoices, quotes, statements, and customers
	•	Optional charts: bar graphs or pie charts for product or customer usage
	•	Use styled cards or tables to display this data visually

UI/UX Requirements:
	•	No browser alert() or confirm()
	•	Use in-page feedback: banners, inline validation, or modals
	•	Fully mobile responsive (flexible layout)
	•	All forms must have validation and loading indicators
	•	Highlight active page in nav

Navigation:
	•	Use a left-hand burger menu (slide-out drawer)
	•	Include icons per item
	•	Show /admin only for admin users
	•	Collapse automatically on small screens
	•	Expand on hover or click

Tech Stack:
	•	React with React Router
	•	Firebase Auth and Firestore
	•	PDF generation with html2pdf.js or jsPDF
	•	No Stripe integration (subscriptions are manually controlled for now)
	•	Deploy on Replit
	•	All features should be coded as real, working components — no mockups or placeholders

Build everything cleanly with reusable components, organized folder structure, and in-page feedback only.